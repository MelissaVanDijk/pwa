{"version":3,"sources":["ng://pwa/lib/pwa.service.ts","ng://pwa/lib/pwa.component.ts","ng://pwa/lib/components/widgetbase.component.ts","ng://pwa/lib/pwa.module.ts"],"names":["PwaService","Injectable","args","providedIn","PwaComponent","prototype","ngOnInit","Component","selector","template","styles","WidgetBaseComponent","_this","this","console","log","window","addEventListener","handleMessage","event","attachEvent","origin","data","source","method","payload","onSelectContact","onSelectVoiceCall","contact","PwaModule","NgModule","imports","declarations","exports"],"mappings":"iPAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAaE,SAAAA,YAEAA,EAAAC,UAAAC,SAAA,iCAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,UACVC,SAAU,4CAKVC,OAAQ,+CATV,GCAAC,EAAA,WAeI,SAAAA,IAAA,IAAAC,EAAAC,eAFc,aAIVC,QAAQC,IAAI,2BACRC,OAAOC,kBACPD,OAAOC,iBAAiB,UAAW,WAAM,OAAAL,EAAKM,cAAcC,SAAQ,GACpEL,QAAQC,IAAI,6BAKZ,OAAcK,YAAY,UAAW,WAAM,OAAAR,EAAKM,cAAcC,SAC9DL,QAAQC,KAAI,EAAO,sCAI3BJ,EAAAN,UAAAa,cAAA,SAAeC,GACX,GAAqB,0BAAjBA,EAAME,QAAuD,0BAAjBF,EAAME,OAAtD,CAKAP,QAAQC,IAAK,aAAcI,EAAMG,MACjCR,QAAQC,IAAK,eAAgBI,EAAME,QACnCP,QAAQC,IAAK,eAAgBI,EAAMI,QAEnC,IAAMC,EAASL,EAAMG,KAAKE,OAASL,EAAMG,KAAKE,OAAS,GACjDC,EAAUN,EAAMG,KAAKG,QAAUN,EAAMG,KAAKG,QAAU,GAE1D,GAAe,KAAXD,GAA6B,KAAZC,EAYrB,OAJAX,QAAQC,IAAK,mBAAqBS,EAAQC,GAC1CX,QAAQC,IAAK,OAAQU,GAGbD,GACJ,IAAK,kBACDX,KAAKa,gBAAgBD,GACrB,MACJ,IAAK,oBACDZ,KAAKc,kBAAkBF,GACvB,MACJ,QACIX,QAAQC,IAAK,qCAAsCS,EAAQC,QAnB/DX,QAAQC,IAAK,2BAA6BS,EAAQC,QAZlDX,QAAQC,IAAI,qBAAsBI,EAAME,SAoChDV,EAAAN,UAAAqB,gBAAA,SAAgBE,GACZd,QAAQC,IAAK,oBAAqBa,IAGtCjB,EAAAN,UAAAsB,kBAAA,SAAkBC,GACdd,QAAQC,IAAK,oBAAqBa,wBAlEzCrB,EAAAA,UAASL,KAAA,CAAC,CACPM,SAAU,iBACVC,SAAU,oEATd,GCAAoB,EAAA,oDAICC,EAAAA,SAAQ5B,KAAA,CAAC,CACR6B,QAAS,GAGTC,aAAc,CACZ5B,EACAO,GAEFsB,QAAS,CACP7B,EACAO,SAdJ","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PwaService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pwa-pwa',\n  template: `\n    <p>\n      pwa works!\n    </p>\n  `,\n  styles: []\n})\nexport class PwaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component } from '@angular/core';\r\nimport { IContact } from '../models/contact';\r\nimport { IVoiceCall } from '../models/call';\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'pwa-widgetbase',\r\n    template: '<div>WIDGETBASE</div>'\r\n  })\r\nexport class WidgetBaseComponent {\r\n\r\n    public name = 'BaseWidget';\r\n\r\n    constructor() {\r\n\r\n        console.log('BaseWidget construction');\r\n        if (window.addEventListener) {\r\n            window.addEventListener('message', () => this.handleMessage(event), false);\r\n            console.log('Event Listener attached');\r\n\r\n        } else {\r\n            // for IE6 - IE10\r\n            // the cast is workaround for typescript not supporting the attachEvent-method\r\n            (<any>window).attachEvent('message', () => this.handleMessage(event));\r\n            console.log(false, 'IE Event Listener attached');\r\n        }\r\n    }\r\n\r\n    handleMessage( event) {\r\n        if (event.origin !== 'http://localhost:4200' && event.origin !== 'http://localhost:5200') {\r\n            console.log('ORIGIN IS NOT GOOD', event.origin);\r\n            return;\r\n        }\r\n\r\n        console.log( 'Event.data', event.data);\r\n        console.log( 'Event.origin', event.origin);\r\n        console.log( 'Event.source', event.source);\r\n\r\n        const method = event.data.method ? event.data.method : '';\r\n        const payload = event.data.payload ? event.data.payload : '';\r\n\r\n        if (method === '' || payload === '') {\r\n            console.log( 'Invalid message received' , method, payload);\r\n            return;\r\n        }\r\n\r\n        //document.getElementById('received-data').innerHTML = 'Message received: ' + method;\r\n        //document.getElementById('payload').innerHTML = JSON.stringify(payload, null, 4);\r\n\r\n        console.log( 'Message received' , method, payload);\r\n        console.log( 'JSON', payload);\r\n\r\n\r\n        switch (method) {\r\n            case 'onSelectContact':\r\n                this.onSelectContact(payload);\r\n                break;\r\n            case 'onSelectVoiceCall':\r\n                this.onSelectVoiceCall(payload);\r\n                break;\r\n            default:\r\n                console.log( 'Invalid method in received message', method, payload);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onSelectContact(contact: IContact) {\r\n        console.log( 'onSelectedContact', contact);\r\n    }\r\n\r\n    onSelectVoiceCall(contact: IVoiceCall) {\r\n        console.log( 'onSelectVoiceCall', contact);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { PwaComponent } from './pwa.component';\nimport { WidgetBaseComponent } from './components/widgetbase.component';\n\n@NgModule({\n  imports: [\n\n  ],\n  declarations: [\n    PwaComponent,\n    WidgetBaseComponent\n  ],\n  exports: [\n    PwaComponent,\n    WidgetBaseComponent\n  ]\n})\nexport class PwaModule { }\n"]}