{"version":3,"file":"pwa.js.map","sources":["ng://pwa/components/widgetbase.component.ts","ng://pwa/pwa.module.ts","ng://pwa/models/call.ts","ng://pwa/models/contact.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { IContact } from '../models/contact';\r\nimport { IVoiceCall } from '../models/call';\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'pwa-widgetbase',\r\n    template: '<div>WIDGETBASE</div>'\r\n  })\r\nexport class WidgetBaseComponent {\r\n\r\n    public name = 'BaseWidget';\r\n\r\n    constructor() {\r\n\r\n        console.log('BaseWidget construction');\r\n        if (window.addEventListener) {\r\n            window.addEventListener('message', () => this.handleMessage(event), false);\r\n            console.log('Event Listener attached');\r\n\r\n        } else {\r\n            // for IE6 - IE10\r\n            // the cast is workaround for typescript not supporting the attachEvent-method\r\n            (<any>window).attachEvent('message', () => this.handleMessage(event));\r\n            console.log(false, 'IE Event Listener attached');\r\n        }\r\n    }\r\n\r\n    handleMessage( event) {\r\n        if (event.origin !== 'http://localhost:4200' && event.origin !== 'http://localhost:5200') {\r\n            console.log('ORIGIN IS NOT GOOD', event.origin);\r\n            return;\r\n        }\r\n\r\n        console.log( 'Event.data', event.data);\r\n        console.log( 'Event.origin', event.origin);\r\n        console.log( 'Event.source', event.source);\r\n\r\n        const method = event.data.method ? event.data.method : '';\r\n        const payload = event.data.payload ? event.data.payload : '';\r\n\r\n        if (method === '' || payload === '') {\r\n            console.log( 'Invalid message received' , method, payload);\r\n            return;\r\n        }\r\n\r\n        //document.getElementById('received-data').innerHTML = 'Message received: ' + method;\r\n        //document.getElementById('payload').innerHTML = JSON.stringify(payload, null, 4);\r\n\r\n        console.log( 'Message received' , method, payload);\r\n        console.log( 'JSON', payload);\r\n\r\n\r\n        switch (method) {\r\n            case 'onSelectContact':\r\n                this.onSelectContact(payload);\r\n                break;\r\n            case 'onSelectVoiceCall':\r\n                this.onSelectVoiceCall(payload);\r\n                break;\r\n            default:\r\n                console.log( 'Invalid method in received message', method, payload);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onSelectContact(contact: IContact) {\r\n        console.log( 'onSelectedContact', contact);\r\n    }\r\n\r\n    onSelectVoiceCall(contact: IVoiceCall) {\r\n        console.log( 'onSelectVoiceCall', contact);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { WidgetBaseComponent } from './components/widgetbase.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n\r\n  ],\r\n  declarations: [\r\n    WidgetBaseComponent\r\n  ],\r\n  exports: [\r\n    WidgetBaseComponent\r\n  ]\r\n})\r\nexport class PwaModule { }\r\n","import { IContact } from './contact';\r\n\r\nexport interface IConversationBase {\r\n    remoteEntry: IContact| null;\r\n    remoteAddress: string;\r\n    fromAddress: string;\r\n    state: CallState;\r\n    id: string;\r\n}\r\n\r\nexport interface IVoiceCall extends IConversationBase {\r\n    modality: 'Voice';\r\n    timeStateChange: Date;\r\n    direction: CallDirection;\r\n    fallback: string;\r\n    callRoute: ICallRouteEntry[];\r\n    toAddress: string;\r\n    originalTo: ICallRouteEntry;\r\n}\r\n\r\nexport interface IChatCall extends IConversationBase {\r\n    modality: 'Chat';\r\n    messages: IChatMessage[];\r\n    duration: number;\r\n    myAddress: string;\r\n    displayName: string;\r\n    pictureUrl: string;\r\n}\r\n\r\nexport interface IMailMessage extends IConversationBase {\r\n    modality: 'Mail';\r\n    timestamp: Date;\r\n    title: string;\r\n    body: string;\r\n    importance: string;\r\n    isDraft: boolean;\r\n    draftId: string;\r\n    claimed: string;\r\n}\r\n\r\nexport type ICall = IVoiceCall | IChatCall | IMailMessage;\r\n\r\nexport interface IChatMessage {\r\n    from: string;\r\n    time: Date;\r\n    message: string;\r\n}\r\n\r\nexport interface ICallRouteEntry {\r\n    fromAddress: string;\r\n    toAddress: string;\r\n    originalTo: string;\r\n    direction: CallDirection;\r\n    originalCalled: IContact;\r\n    from: Date;\r\n    until: Date;\r\n}\r\n\r\n\r\nexport enum CallDirection {\r\n    Incoming = 0,\r\n    Outgoing = 1\r\n}\r\n\r\nexport enum CallState {\r\n    Idle = 0,\r\n    Incoming = 1,\r\n    Connected = 2,\r\n    Hold = 3,\r\n    Dialing = 4,\r\n    Disconnected = 5\r\n}","export interface IContact {\r\n    key: string;\r\n\r\n    idCombined: string;\r\n    initials: string;\r\n    completeName: string;\r\n    firstName: string;\r\n    middleName: string;\r\n    lastName: string;\r\n    id: string;\r\n    companyEmail: string;\r\n    compPrimaryPhone: string;\r\n    compAltPhone: string;\r\n    mobilePhone: string;\r\n    privatePhone: string;\r\n    sipAddress: string;\r\n    telUri: string;\r\n    function: string;\r\n    photo: string;\r\n    contactScope: ContactScope;\r\n\r\n    organization: IOmnidirOrg;\r\n    department: IOmnidirDept;\r\n    building: IOmnidirBuilding;\r\n\r\n    data: IContactData;\r\n}\r\n\r\nexport enum ContactScope {\r\n    Personal ,\r\n    Company\r\n}\r\n\r\nexport interface ICoordinates {\r\n    lat: number;\r\n    lng: number;\r\n}\r\n\r\nexport interface IContactData {\r\n    key: string;\r\n    coordinates: ICoordinates;\r\n}\r\n\r\nexport interface IOmnidirOrg {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface IOmnidirDept {\r\n    id: number;\r\n    name: string;\r\n    organizationId: number;\r\n}\r\n\r\nexport interface IOmnidirBuilding {\r\n    id: number;\r\n    name: string;\r\n    organizationId: number;\r\n}\r\n\r\nexport interface IOmnidirColumn {\r\n    id: number;\r\n    name: string;\r\n    translation: string;\r\n}"],"names":[],"mappings":"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"}
